{
  "compilerOptions": {
    /* Basic Options */
    "target": "ESNext",                   // Specify ECMAScript target version
    "module": "ESNext",                   // Specify module code generation
    "lib": ["ESNext", "DOM"],             // Specify library files to be included
    "allowJs": true,                      // Allow JavaScript files to be compiled
    "checkJs": false,                     // Report errors in .js files
    "jsx": "react-jsx",                   // JSX code generation: preserve or react
    "declaration": true,                  // Generates corresponding '.d.ts' file
    "declarationMap": true,               // Generates a source map for each corresponding '.d.ts' file
    "sourceMap": true,                    // Generates corresponding '.map' file
    "outDir": "./dist",                   // Redirect output structure to the directory
    "rootDir": "./src",                   // Specify the root directory of input files
    "composite": false,                   // Enable project compilation
    "removeComments": true,               // Do not emit comments to output
    "noEmit": false,                      // Do not emit outputs
    "importHelpers": true,                // Import emit helpers from 'tslib'
    "downlevelIteration": true,           // Provide full support for iterables in ES5/ES3
    "isolatedModules": true,              // Transpile each file as a separate module
    "allowImportingTsExtensions": true,

    /* Strict Type-Checking Options */
    "strict": false,                       // Enable all strict type-checking options
    "noImplicitAny": false,                // Raise error on expressions and declarations with an implied 'any' type
    "strictNullChecks": false,             // Enable strict null checks
    "strictFunctionTypes": false,          // Enable strict checking of function types
    "strictBindCallApply": false,          // Enable strict 'bind', 'call', and 'apply' methods on functions
    "strictPropertyInitialization": false, // Enable strict checking of property initialization in classes
    "noImplicitThis": false,               // Raise error on 'this' expressions with an implied 'any' type
    "alwaysStrict": false,                 // Parse in strict mode and emit 'use strict' for each source file

    /* Additional Checks */
    "noUnusedLocals": true,               // Report errors on unused locals
    "noUnusedParameters": true,           // Report errors on unused parameters
    "noImplicitReturns": true,            // Report error when not all code paths in function return a value
    "noFallthroughCasesInSwitch": true,   // Report errors for fallthrough cases in switch statements

    /* Module Resolution Options */
    "moduleResolution": "Node",           // Specify module resolution strategy: 'Node' for Node.js, 'Classic' for TypeScript pre-1.6
    "baseUrl": "./",                      // Base directory to resolve non-relative module names
    "paths": {
      "@src/*": ["src/*"],                 // Base URL to match 'src' paths
    },
    "paths": {
      "#admin/*": ["./app/admin/*"],
      "#auth/*": ["./app/auth/*"],
      "#ui/*": ["./app/ui/*"],
      "#user/*": ["./app/user/*"],
      "#app/*": ["./app/*"],
      "#post/*": ["./app/post/*"],
      "#whiteroom/*": ["./src/*"]
    },
    "esModuleInterop": true,              // Enables emit interoperability between CommonJS and ES Modules
    "preserveSymlinks": true,             // Do not resolve the real path of symlinked files
    "allowSyntheticDefaultImports": true, // Allow default imports from modules with no default export

    /* Source Map Options */
    "sourceRoot": "/",                    // Specifies the root path for debuggers to find the reference source code
    "mapRoot": "/",                       // Specifies the location where debugger should locate map files instead of generated locations

    /* Experimental Options */
    "experimentalDecorators": true,       // Enables experimental support for ES7 decorators
    "emitDecoratorMetadata": true         // Enables experimental support for emitting type metadata for decorators
  },
  "include": ["src", "app"],              // Include all TypeScript files in the 'src' directory
  "exclude": ["node_modules", "**/*.spec.ts"], // Exclude 'node_modules' and test files
  "ts-node": {
    "esm": true,                          // Enable ESM support in 'ts-node'
    "transpileOnly": true                 // Use transpile only mode for faster execution in development
  }
}