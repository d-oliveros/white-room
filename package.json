{
  "name": "white-room",
  "version": "2.0.0",
  "type": "module",
  "private": true,
  "engines": {
    "node": "22.6.0",
    "npm": "10.8.2"
  },
  "scripts": {
    "start": "npm run dev",
    "dev": "run-p dev-node dev-webpack",
    "dev-node": "clear && dotenv -e .env -e .env.default -- node --watch-path=./whiteroom --watch-path=./app --env-file=.env --env-file=.env.default --import 'data:text/javascript,import { register } from \"node:module\"; import { pathToFileURL } from \"node:url\"; register(\"./babel-esm-loader.js\", pathToFileURL(\"./\")); ' app/init.js",
    "dev-webpack": "clear && dotenv -e .env -e .env.default webpack serve --mode=development",
    "dev-debug": "cross-env DEBUG=white-room* npm run dev",
    "dev-bundle": "USE_BUILD=true npm run dev-node",
    "serve": "USE_BUILD=true NODE_ENV=production node --env-file=.env.default app/init.js",
    "build": "./build.sh --skip-install",
    "compile": "run-p build-babel build-webpack",
    "build-babel": "run-p build-babel-app build-babel-src build-babel-migrations",
    "build-babel-app": "babel app --extensions '.js,.jsx,.ts,.tsx' --config-file ./babel.build.config.cjs --ignore '**/*.stories.jsx' --out-dir build/app",
    "build-babel-src": "babel whiteroom --extensions '.js,.jsx,.ts,.tsx' --config-file ./babel.build.config.cjs --ignore '**/*.stories.jsx' --out-dir build/whiteroom",
    "build-babel-migrations": "babel migrations --extensions '.ts' --config-file ./babel.build.config.cjs --ignore '**/*.stories.jsx' --out-dir build/migrations",
    "build-webpack": "webpack --config webpack.config.js --mode production --no-cache",
    "build-storybook": "storybook build",
    "docker-build": "./docker/build-docker.sh",
    "docker-run": "./docker/run.sh",
    "webpack-analyze-bundle": "npm run build-webpack && webpack --config webpack.config.js --profile --json > build/stats.json && webpack-bundle-analyzer build/stats.json build",
    "lint": "eslint --max-warnings 0 --ignore-path .gitignore 'whiteroom/**/*.{js,jsx,ts,tsx}' 'app/**/*.{js,jsx,ts,tsx}' && clear && echo '[lint]: Done.'",
    "test-build": "npm run build && npm run dev-bundle",
    "test": "mocha --ui bdd --recursive --exit",
    "test-watch": "npm run test -- --watch",
    "test-ts-types": "tsc --noEmit",
    "script": "node whiteroom/scripts/load",
    "db-generate-migration": "typeorm-ts-node-esm migration:generate -d app/dataSource.js migrations/$npm_config_name && npm run db-migrate-latest",
    "db-migrate-latest": "dotenv -e .env -e .env.default -- typeorm-ts-node-esm migration:run -d app/dataSource.js",
    "db-drop": "docker compose -f ./docker/docker-compose.yml down && docker compose -f ./docker/docker-compose.yml up -d && npm run wait-for-db",
    "db-reset": "npm run db-drop && npm run db-migrate-latest && npm run knex-load-seeds",
    "db-clear": "echo \"TBD: Implement using clear-db.js\"",
    "wait-for-db": "echo \"Waiting for PostgreSQL to be ready...\" && until docker compose -f ./docker/docker-compose.yml exec -T postgres pg_isready -h localhost -p 5432 > /dev/null 2>&1; do sleep 0.1; done && echo \"PostgreSQL is ready.\";",
    "knex-load-seeds": "dotenv -e .env -e .env.default knex seed:run ",
    "cypress:install": "npm install --no-save cypress @cypress/webpack-preprocessor",
    "cypress:open": "cypress open --e2e --browser electron",
    "cypress:test": "cypress run",
    "prepush": "npm run lint",
    "storybook": "storybook dev -p 6006",
    "precommit": "npm run type-check"
  },
  "dependencies": {
    "@aws-sdk/client-lambda": "^3.635.0",
    "@aws-sdk/client-s3": "^3.635.0",
    "@segment/analytics-node": "^2.1.2",
    "@tanstack/react-query": "^5.52.0",
    "baobab": "^2.6.1",
    "body-parser": "^1.20.2",
    "bullmq": "^5.12.9",
    "classnames": "^2.5.1",
    "cookie-parser": "^1.4.6",
    "dayjs": "^1.11.13",
    "debug": "^4.3.6",
    "express": "^4.19.2",
    "flowbite": "^2.5.1",
    "flowbite-react": "^0.10.1",
    "formidable": "^3.5.1",
    "helmet": "^7.1.0",
    "http-proxy-middleware": "^3.0.0",
    "ioredis": "^5.4.1",
    "isbot": "^5.1.17",
    "jsesc": "^3.0.2",
    "jsonwebtoken": "^9.0.2",
    "knex": "^3.1.0",
    "knex-postgis": "^0.14.3",
    "lodash": "^4.17.21",
    "mime": "^4.0.4",
    "mobile-detect": "^1.4.5",
    "node-cron": "^3.0.3",
    "objectdiff": "^1.1.0",
    "pg": "^8.12.0",
    "pino": "^9.3.2",
    "pluralize": "^8.0.0",
    "prop-types": "^15.8.1",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-hook-form": "^7.52.2",
    "react-router": "^6.26.1",
    "react-router-dom": "^6.26.1",
    "serialize-error": "^11.0.3",
    "sitemap": "^8.0.0",
    "type-check": "^0.4.0",
    "ua-parser-js": "^1.0.38",
    "uuid": "^10.0.0",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@babel/cli": "^7.24.8",
    "@babel/core": "^7.25.2",
    "@babel/eslint-parser": "^7.25.1",
    "@babel/plugin-proposal-decorators": "^7.24.7",
    "@babel/plugin-syntax-import-meta": "^7.10.4",
    "@babel/plugin-transform-class-properties": "^7.24.7",
    "@babel/plugin-transform-export-namespace-from": "^7.24.7",
    "@babel/plugin-transform-optional-chaining": "^7.24.8",
    "@babel/plugin-transform-runtime": "^7.24.7",
    "@babel/plugin-transform-typescript": "^7.25.2",
    "@babel/preset-env": "^7.25.3",
    "@babel/preset-react": "^7.24.7",
    "@babel/runtime-corejs3": "^7.25.0",
    "@dr.pogodin/babel-plugin-react-css-modules": "^6.13.2",
    "@faker-js/faker": "^8.4.1",
    "@node-loader/babel": "^2.1.0",
    "@pmmmwh/react-refresh-webpack-plugin": "^0.5.15",
    "@storybook/addon-actions": "^8.2.9",
    "@storybook/addon-essentials": "^8.2.9",
    "@storybook/addon-styling-webpack": "^1.0.0",
    "@storybook/addon-webpack5-compiler-swc": "^1.0.5",
    "@storybook/react-webpack5": "^8.2.9",
    "@tanstack/react-query-devtools": "^5.52.0",
    "@types/node": "^22.4.2",
    "@types/react": "^18.3.4",
    "@types/react-dom": "^18.3.0",
    "@typescript-eslint/eslint-plugin": "^8.2.0",
    "@typescript-eslint/parser": "^8.2.0",
    "autoprefixer": "^10.4.20",
    "babel-loader": "^9.1.3",
    "babel-plugin-transform-rewrite-imports": "^1.2.0",
    "chai": "^5.1.1",
    "core-js": "^3.38.1",
    "cross-env": "^7.0.3",
    "css-loader": "^7.1.2",
    "css-minimizer-webpack-plugin": "^7.0.0",
    "csvtojson": "^2.0.10",
    "dotenv-cli": "^7.4.2",
    "eslint-import-resolver-alias": "^1.1.2",
    "eslint-import-resolver-node": "^0.3.9",
    "eslint-plugin-chai-friendly": "^1.0.1",
    "eslint-plugin-cypress": "^3.5.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jsx-a11y": "^6.9.0",
    "eslint-plugin-react": "^7.35.0",
    "eslint-plugin-react-hooks": "^4.6.2",
    "file-loader": "^6.2.0",
    "glob": "^11.0.0",
    "husky": "^9.1.5",
    "json-loader": "^0.5.7",
    "lint-staged": "^15.2.9",
    "mini-css-extract-plugin": "^2.9.1",
    "mocha": "^10.7.3",
    "node-libs-browser": "^2.2.1",
    "node-polyfill-webpack-plugin": "^4.0.0",
    "npm-run-all": "^4.1.5",
    "pino-pretty": "^11.2.2",
    "postcss": "^8.4.41",
    "postcss-loader": "^8.1.1",
    "postcss-modules": "^6.0.0",
    "postcss-preset-env": "^10.0.2",
    "react-refresh": "^0.14.2",
    "sinon": "^18.0.0",
    "storybook": "^8.2.9",
    "style-loader": "^4.0.0",
    "supertest": "^7.0.0",
    "tailwindcss": "^3.4.10",
    "terser-webpack-plugin": "^5.3.10",
    "ts-node": "^10.9.2",
    "typeorm": "^0.3.20",
    "url-loader": "^4.1.1",
    "vitest": "^2.0.5",
    "webpack": "^5.93.0",
    "webpack-bundle-analyzer": "^4.10.2",
    "webpack-cli": "^5.1.4",
    "webpack-dev-server": "^5.0.4"
  },
  "main": "app/init.js",
  "directories": {
    "test": "test"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/d-oliveros/white-room.git"
  },
  "keywords": [],
  "author": "David Oliveros",
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/d-oliveros/white-room/issues"
  },
  "homepage": "https://github.com/d-oliveros/white-room#readme",
  "browserslist": [
    "defaults"
  ],
  "imports": {
    "#admin/*": "./app/admin/*",
    "#auth/*": "./app/auth/*",
    "#ui/*": "./app/ui/*",
    "#user/*": "./app/user/*",
    "#app/*": "./app/*",
    "#post/*": "./app/post/*",
    "#whiteroom/*": "./whiteroom/*"
  },
  "lint-staged": {
    "*.ts": [
      "npm run type-check",
      "git add"
    ]
  },
  "eslintConfig": {
    "extends": [
      "plugin:storybook/recommended"
    ]
  }
}
